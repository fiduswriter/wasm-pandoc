diff --git a/cabal.project b/cabal.project
index 4ca6da52e630..b3a4ffcbb87b 100644
--- a/cabal.project
+++ b/cabal.project
@@ -2,9 +2,146 @@
           pandoc-lua-engine
           pandoc-server
           pandoc-cli
-tests: True
-flags: +embed_data_files
+tests: False
 constraints: skylighting-format-blaze-html >= 0.1.1.3,
              skylighting-format-context >= 0.1.0.2,
              -- for now (commercialhaskell/stackage#7545):
              data-default-class <= 0.2, data-default <= 0.8
+
+allow-newer: all:zlib
+
+package aeson
+  flags: -ordered-keymap
+
+package crypton
+  ghc-options: -optc-DARGON2_NO_THREADS
+
+package digest
+  flags: -pkg-config
+
+package pandoc
+  flags: +embed_data_files
+
+package pandoc-cli
+  flags: -lua -server
+
+allow-newer:
+  all:Cabal,
+  all:Cabal-syntax,
+  all:array,
+  all:base,
+  all:binary,
+  all:bytestring,
+  all:containers,
+  all:deepseq,
+  all:directory,
+  all:exceptions,
+  all:filepath,
+  all:ghc,
+  all:ghc-bignum,
+  all:ghc-boot,
+  all:ghc-boot-th,
+  all:ghc-compact,
+  all:ghc-experimental,
+  all:ghc-heap,
+  all:ghc-internal,
+  all:ghc-platform,
+  all:ghc-prim,
+  all:ghc-toolchain,
+  all:ghci,
+  all:haskeline,
+  all:hpc,
+  all:integer-gmp,
+  all:mtl,
+  all:os-string,
+  all:parsec,
+  all:pretty,
+  all:process,
+  all:rts,
+  all:semaphore-compat,
+  all:stm,
+  all:system-cxx-std-lib,
+  all:template-haskell,
+  all:text,
+  all:time,
+  all:transformers,
+  all:unix,
+  all:xhtml
+
+constraints:
+  Cabal installed,
+  Cabal-syntax installed,
+  array installed,
+  base installed,
+  binary installed,
+  bytestring installed,
+  containers installed,
+  deepseq installed,
+  directory installed,
+  exceptions installed,
+  filepath installed,
+  ghc installed,
+  ghc-bignum installed,
+  ghc-boot installed,
+  ghc-boot-th installed,
+  ghc-compact installed,
+  ghc-experimental installed,
+  ghc-heap installed,
+  ghc-internal installed,
+  ghc-platform installed,
+  ghc-prim installed,
+  ghc-toolchain installed,
+  ghci installed,
+  haskeline installed,
+  hpc installed,
+  integer-gmp installed,
+  mtl installed,
+  os-string installed,
+  parsec installed,
+  pretty installed,
+  process installed,
+  rts installed,
+  semaphore-compat installed,
+  stm installed,
+  system-cxx-std-lib installed,
+  template-haskell installed,
+  text installed,
+  time installed,
+  transformers installed,
+  unix installed,
+  xhtml installed
+
+-- https://github.com/haskell/network/pull/598
+source-repository-package
+  type: git
+  location: https://github.com/haskell-wasm/network.git
+  tag: ab92e48e9fdf3abe214f85fdbe5301c1280e14e9
+
+source-repository-package
+  type: git
+  location: https://github.com/haskell-wasm/foundation.git
+  tag: 8e6dd48527fb429c1922083a5030ef88e3d58dd3
+  subdir: basement
+
+source-repository-package
+  type: git
+  location: https://github.com/haskell-wasm/hs-memory.git
+  tag: a198a76c584dc2cfdcde6b431968de92a5fed65e
+
+source-repository-package
+  type: git
+  location: https://github.com/haskell-wasm/xml.git
+  tag: bc793dc9bc29c92245d3482a54d326abd3ae1403
+  subdir: xml-conduit
+
+-- https://github.com/haskellari/splitmix/pull/73
+source-repository-package
+  type: git
+  location: https://github.com/amesgen/splitmix
+  tag: 5f5b766d97dc735ac228215d240a3bb90bc2ff75
+
+source-repository-package
+  type: git
+  location: https://github.com/amesgen/cborg
+  tag: c3b5c696f62d04c0d87f55250bfc0016ab94d800
+  subdir: cborg
diff --git a/pandoc-cli/pandoc-cli.cabal b/pandoc-cli/pandoc-cli.cabal
index 5b904b9906bd..66d92a1875f3 100644
--- a/pandoc-cli/pandoc-cli.cabal
+++ b/pandoc-cli/pandoc-cli.cabal
@@ -61,7 +61,7 @@ common common-options

 common common-executable
   import:           common-options
-  ghc-options:      -rtsopts -with-rtsopts=-A8m -threaded
+  ghc-options:      -rtsopts -with-rtsopts=-H64m

 executable pandoc
   import:          common-executable
@@ -74,6 +74,10 @@ executable pandoc
                    text
   other-modules:   PandocCLI.Lua
                  , PandocCLI.Server
+
+  if arch(wasm32)
+    ghc-options:    -optl-Wl,--export=__wasm_call_ctors,--export=hs_init_with_rtsopts,--export=malloc,--export=wasm_main
+
   if flag(nightly)
     cpp-options:    -DNIGHTLY
     build-depends:  template-haskell,
diff --git a/pandoc-cli/src/pandoc.hs b/pandoc-cli/src/pandoc.hs
index 019d0adedb15..520a858c89a2 100644
--- a/pandoc-cli/src/pandoc.hs
+++ b/pandoc-cli/src/pandoc.hs
@@ -1,5 +1,7 @@
 {-# LANGUAGE CPP #-}
+{-# LANGUAGE ScopedTypeVariables #-}
 {-# LANGUAGE TemplateHaskell #-}
+
 {- |
    Module      : Main
    Copyright   : Copyright (C) 2006-2024 John MacFarlane
@@ -34,6 +36,13 @@ import qualified Language.Haskell.TH as TH
 import Data.Time
 #endif

+#if defined(wasm32_HOST_ARCH)
+import Control.Exception
+import Foreign
+import Foreign.C
+import System.IO
+#endif
+
 #ifdef NIGHTLY
 versionSuffix :: String
 versionSuffix = "-nightly-" ++
@@ -44,6 +53,24 @@ versionSuffix :: String
 versionSuffix = ""
 #endif

+#if defined(wasm32_HOST_ARCH)
+
+foreign export ccall "wasm_main" wasm_main :: Ptr CChar -> Int -> IO ()
+
+wasm_main :: Ptr CChar -> Int -> IO ()
+wasm_main raw_args_ptr raw_args_len =
+  catch act (\(err :: SomeException) -> hPrint stderr err)
+  where
+    act = do
+      args <- words <$> peekCStringLen (raw_args_ptr, raw_args_len)
+      free raw_args_ptr
+      engine <- getEngine
+      res <- parseOptionsFromArgs options defaultOpts "pandoc.wasm" $ args <> ["/in", "-o", "/out"]
+      case res of
+        Left e -> handleOptInfo engine e
+        Right opts -> convertWithOpts engine opts
+#endif
+
 main :: IO ()
 main = E.handle (handleError . Left) $ do
   prg <- getProgName
